{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,qBAC9BE,OAAQH,SAASC,cAAc,sBAC/BG,KAAMJ,SAASC,cAAc,oBAC7BI,UAAWL,SAASC,cAAc,WAKpC,SAASK,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAI,C,SAAEF,E,MAAUL,IAEhBQ,EAAI,C,SAAEH,E,MAAUL,GAAQ,GAEzBA,EAAM,G,CAXbJ,EAAKC,KAAKe,iBAAiB,UAe3B,SAAsBC,GACpBA,EAAEC,iBAEF,MAAMb,GAAUL,EAAKK,OAAOc,MACtBC,GAASpB,EAAKI,MAAMe,MACpBb,GAAQN,EAAKM,KAAKa,MACxB,IAAIE,EAAYD,EAEhBZ,EAAc,EAAGa,GACdC,MAAK,EAACb,SAAEA,EAAQL,MAAEA,MACjBN,EAAAyB,OAAOC,QAAQ,uBAAqBf,QAAiBL,MAAU,IAEhEqB,OAAM,EAAChB,SAAEA,EAAQL,MAAEA,MAClBN,EAAAyB,OAAOG,QAAQ,sBAAoBjB,QAAiBL,MAAU,IAGlE,IAAK,IAAIuB,EAAI,EAAGA,GAAKtB,EAAQsB,GAAK,EAChCN,GAAaf,EACbE,EAAcmB,EAAGN,GACdC,MAAK,EAACb,SAAEA,EAAQL,MAAEA,MACjBN,EAAAyB,OAAOC,QAAQ,uBAAqBf,QAAiBL,MAAU,IAEhEqB,OAAM,EAAChB,SAAEA,EAAQL,MAAEA,MAClBN,EAAAyB,OAAOG,QAAQ,sBAAoBjB,QAAeL,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=delay]'),\n  amount: document.querySelector('input[name=amount]'),\n  step: document.querySelector('input[name=step]'),\n  submitBtn: document.querySelector('button'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const amount = +refs.amount.value;\n  const delay = +refs.delay.value;\n  const step = +refs.step.value;\n  let plusDelay = delay;\n\n  createPromise(1, plusDelay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n  for (let i = 2; i <= amount; i += 1) {\n    plusDelay += step;\n    createPromise(i, plusDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","amount","step","submitBtn","$47d4ff9957288465$var$createPromise","position","Promise","res","rej","setTimeout","Math","random","addEventListener","e","preventDefault","value","delay1","plusDelay","then","Notify","success","catch","failure","i"],"version":3,"file":"03-promises.4b4ba213.js.map"}